"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  useEffectEvent: () => useEffectEvent,
  useFormReset: () => useFormReset,
  useLayoutEffect: () => useLayoutEffect
});
module.exports = __toCommonJS(index_exports);
var import_react = __toESM(require("react"));
var useLayoutEffect = typeof document !== "undefined" ? import_react.default.useLayoutEffect : () => {
};
function useEffectEvent(fn) {
  const ref = (0, import_react.useRef)(null);
  useLayoutEffect(() => {
    ref.current = fn;
  }, [fn]);
  return (0, import_react.useCallback)((...args) => {
    const f = ref.current;
    return f == null ? void 0 : f(...args);
  }, []);
}
function useFormReset(ref, initialValue, onReset) {
  let resetValue = (0, import_react.useRef)(initialValue);
  let handleReset = useEffectEvent(() => {
    if (onReset) {
      onReset(resetValue.current);
    }
  });
  (0, import_react.useEffect)(() => {
    var _a;
    let form = (_a = ref == null ? void 0 : ref.current) == null ? void 0 : _a.form;
    form == null ? void 0 : form.addEventListener("reset", handleReset);
    return () => {
      form == null ? void 0 : form.removeEventListener("reset", handleReset);
    };
  }, [ref, handleReset]);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useEffectEvent,
  useFormReset,
  useLayoutEffect
});
